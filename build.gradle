buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

allprojects {
	group = 'org.zerock'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}



subprojects { //각 모듈에 적용할 공통설정
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	dependencies {

	}
	tasks.named('test') {
		useJUnitPlatform()
	}


}

project(':seminarhub-core') {
	bootJar { enabled = false } // core 은 bootJar 로 패키징 할 필요 없음
	jar { enabled = true }

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//		implementation 'org.springframework.boot:spring-boot-starter-security'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
		annotationProcessor(
				"jakarta.persistence:jakarta.persistence-api",
				"jakarta.annotation:jakarta.annotation-api",
				"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
	}
	def generated='src/main/generated'
	sourceSets {
		main.java.srcDirs += [ generated ]
	}

	tasks.withType(JavaCompile) {
		options.generatedSourceOutputDirectory = file(generated)
	}

	clean.doLast {
		file(generated).deleteDir()
	}
}

project(':seminarhub-monolithic-api-server') {

	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':seminarhub-core')

		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'
		testImplementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation group: 'org.json', name: 'json', version: '20230618'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'

		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
		annotationProcessor(
				"jakarta.persistence:jakarta.persistence-api",
				"jakarta.annotation:jakarta.annotation-api",
				"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '3.0.2'
		implementation group: 'org.ehcache', name: 'ehcache', version: '3.10.8'
		implementation group: 'javax.cache', name: 'cache-api', version: '1.1.1' //

		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '3.1.0'
//		implementation group: 'org.springframework.data', name: 'spring-data-elasticsearch', version: '5.1.1'
//		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '2.2.5.RELEASE'
//		implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'




	}


}

project(':seminarhub-cloud-config-server') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '4.0.3'
		implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5' //For application yaml Encryption
		testImplementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'
//		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.0.3'
		//spring.main.web-application-type=reactive 이기에 remove spring-boot-starter-web dependency.
	}
}

project(':seminarhub-cloud-gateway-server'){

	bootJar { enabled = true }
	jar { enabled = false }

	dependencies{
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-gateway', version: '4.0.6'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.0.3'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.4'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'
		// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-kubernetes
//		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-kubernetes', version: '1.1.10.RELEASE'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-kubernetes-discovery', version: '3.0.4'
//		implementation group: 'org.springframework.cloud', name: 'spring-cloud-kubernetes-discovery', version: '1.1.10.RELEASE'
//		implementation group: 'org.springframework.cloud', name: 'spring-cloud-kubernetes-discovery', version: '3.0.4'
//		implementation group: 'io.fabric8', name: 'kubernetes-client', version: '6.5.1'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}
}

project(':seminarhub-cloud-netflix-eureka-server'){
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '4.0.3'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.4'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'

	}
}

project(':seminarhub-member-api-server') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':seminarhub-core') // 컴파일 시 velog-core project 로딩


		implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.4'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.0.3'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'
		testImplementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		testImplementation 'org.springframework.security:spring-security-test'
		implementation group: 'org.json', name: 'json', version: '20230618'
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation 'javax.xml.bind:jaxb-api:2.3.0'
		implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.0.4'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

	}
}

project(':seminarhub-member-seminar-api-server') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':seminarhub-core') // 컴파일 시 velog-core project 로딩


		implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.4'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.0.3'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'
		testImplementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		testImplementation 'org.springframework.security:spring-security-test'
		implementation group: 'org.json', name: 'json', version: '20230618'
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation 'javax.xml.bind:jaxb-api:2.3.0'
		implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

	}
}


project(':seminarhub-seminar-api-server') {

	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':seminarhub-core') // 컴파일 시 velog-core project 로딩

		implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.4'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.0.3'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'
		testImplementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		testImplementation 'org.springframework.security:spring-security-test'
		implementation group: 'org.json', name: 'json', version: '20230618'
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation 'javax.xml.bind:jaxb-api:2.3.0'
		implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
		annotationProcessor(
				"jakarta.persistence:jakarta.persistence-api",
				"jakarta.annotation:jakarta.annotation-api",
				"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
	}


}